{"ast":null,"code":"import _slicedToArray from\"C:/webshop/shopping/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from'axios';import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import Navmenu from'./navmenu';import{addToCart}from'../_actions/user_action';import{withRouter}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Detail(props){var isLogged=useSelector(function(state){return state.user.isLoggedIn;});var dispatch=useDispatch();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),Option=_useState2[0],setOption=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),Product=_useState4[0],setProduct=_useState4[1];var productId=props.match.params.productId;var optionHanlder=function optionHanlder(e){setOption(e.currentTarget.value);};var clickHandler=function clickHandler(e){if(isLogged){dispatch(addToCart(productId,Option));}else{alert(\"로그인해주세요!\");}};useEffect(function(){axios.get(\"/api/product/products_by_id?id=\".concat(productId,\"&type=single\")).then(function(response){if(response.data){setProduct(response.data[0]);}else{alert(\"상품불러오기 실패\");}});},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navmenu,{}),/*#__PURE__*/_jsxs(\"section\",{className:\"detailContainer\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"detailImage\",src:\"http://localhost:5000/\".concat(Product.image)}),/*#__PURE__*/_jsxs(\"div\",{className:\"detailContent\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"detailTitle\",children:Product.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"detailDesc\",children:[\"\\uBD84\\uB958\",/*#__PURE__*/_jsx(\"span\",{className:\"detailDescVal\",children:Product.category})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detailDesc\",children:[\"\\uAC00\\uACA9\",/*#__PURE__*/_jsx(\"span\",{className:\"detailDescVal\",children:Product.price})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detailDesc\",children:[\"\\uC7AC\\uACE0\",/*#__PURE__*/_jsx(\"span\",{className:\"detailDescVal\",children:Product.stock})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detailPay\",children:[/*#__PURE__*/_jsxs(\"select\",{className:\"detailSelect\",onChange:optionHanlder,children:[/*#__PURE__*/_jsx(\"option\",{value:\"none\",className:\"detailSelectOp\",children:\"\\uC635\\uC158\\uC120\\uD0DD\"}),/*#__PURE__*/_jsx(\"option\",{value:Product.option,className:\"detailSelectOp\",children:Product.option})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detailBtn\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"detailCartBtn\",onClick:clickHandler,children:\"\\uC7A5\\uBC14\\uAD6C\\uB2C8\"}),/*#__PURE__*/_jsx(\"button\",{className:\"detailPayBtn\",children:\"\\uACB0\\uC81C\\uD558\\uAE30\"})]})]})]})]});}export default withRouter(Detail);","map":{"version":3,"sources":["C:/webshop/shopping/src/views/detail.js"],"names":["axios","React","useEffect","useState","useDispatch","useSelector","Navmenu","addToCart","withRouter","Detail","props","isLogged","state","user","isLoggedIn","dispatch","Option","setOption","Product","setProduct","productId","match","params","optionHanlder","e","currentTarget","value","clickHandler","alert","get","then","response","data","image","title","category","price","stock","option"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport Navmenu from './navmenu';\r\nimport {addToCart} from '../_actions/user_action'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction Detail (props) {\r\n    const isLogged = useSelector(state=>state.user.isLoggedIn);\r\n    const dispatch = useDispatch();\r\n    const [Option,setOption] = useState(\"\");\r\n    const [Product,setProduct] = useState([]);\r\n    const productId = props.match.params.productId\r\n    \r\n    const optionHanlder = (e) => {\r\n        setOption(e.currentTarget.value)\r\n        \r\n    }\r\n    const clickHandler = (e) => {\r\n        if(isLogged) {\r\n            dispatch(addToCart(productId,Option))\r\n        } else {\r\n            alert(\"로그인해주세요!\");\r\n        }     \r\n    }\r\n    useEffect(()=> {\r\n        \r\n    axios.get(`/api/product/products_by_id?id=${productId}&type=single`)\r\n\r\n    .then(response => {\r\n        if(response.data) {\r\n            setProduct(response.data[0])\r\n            \r\n        } else {\r\n            alert(\"상품불러오기 실패\")\r\n        }\r\n    })},[])\r\n    \r\n    return (\r\n        <div>\r\n        <Navmenu></Navmenu>\r\n        <section className='detailContainer'>\r\n            <img className='detailImage' src={`http://localhost:5000/${Product.image}`}/>\r\n            <div className='detailContent'>\r\n                <div className='detailTitle'>{Product.title}</div>\r\n                <div className='detailDesc'>분류<span className='detailDescVal'>{Product.category}</span></div>\r\n                <div className='detailDesc'>가격<span className='detailDescVal'>{Product.price}</span></div>\r\n                <div className='detailDesc'>재고<span className='detailDescVal'>{Product.stock}</span></div>\r\n            </div>\r\n            <div className='detailPay'>\r\n                <select className=\"detailSelect\" onChange={optionHanlder}>\r\n                    <option value=\"none\" className='detailSelectOp'>옵션선택</option>\r\n                    <option value={Product.option} className='detailSelectOp'>{Product.option}</option>\r\n                </select>\r\n                <div className='detailBtn'>\r\n                    <button className='detailCartBtn' onClick={clickHandler}>장바구니</button>\r\n                    <button className='detailPayBtn'>결제하기</button>\r\n                </div>\r\n            </div>  \r\n        </section>\r\n        </div>\r\n    )\r\n}\r\n\r\n  export default withRouter(Detail);"]},"metadata":{},"sourceType":"module"}