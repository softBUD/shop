{"ast":null,"code":"import _slicedToArray from\"C:/webshop/shopping/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{useDispatch}from'react-redux';import{withRouter}from'react-router-dom';import Navmenu from\"./navmenu.js\";import{getCartItems}from'../_actions/user_action';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Cart(props){var dispatch=useDispatch();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),Product=_useState2[0],setProduct=_useState2[1];console.log(Product);useEffect(function(){var cartItems=[];//유저 데이터 true이고, cart에 상품이 있을때\nif(props.user.userData&&props.user.userData.cart){if(props.user.userData.cart.length>0){props.user.userData.cart.forEach(function(item){//userData.cart : id,quantity,option\n//상품이 들어있으면 상품들의 id값 배열로 넣어줌\ncartItems.push(item.id);});//상품 아이디, 유저정보 안의 카트 데이터 넣어서 실행\ndispatch(getCartItems(cartItems,props.user.userData.cart)).then(function(response){setProduct(response.payload);});}}},[props.user.userData]);return/*#__PURE__*/_jsxs(\"div\",{className:\"cartWrapper\",children:[/*#__PURE__*/_jsx(Navmenu,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"myCartContainer\",children:[/*#__PURE__*/_jsx(\"h2\",{id:\"myCart\",children:\"\\uB0B4 \\uCE74\\uD2B8\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"cartTable\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"cartTableHead\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"cartTableTd\",children:\"\\uC774\\uBBF8\\uC9C0\"}),/*#__PURE__*/_jsx(\"td\",{className:\"cartTableTd\",children:\"\\uC0C1\\uD488\\uBA85\"}),/*#__PURE__*/_jsx(\"td\",{className:\"cartTableTd\",id:\"tableTdOption\",children:\"\\uC635\\uC158\"}),/*#__PURE__*/_jsx(\"td\",{className:\"cartTableTd\",children:\"\\uAC00\\uACA9\"}),/*#__PURE__*/_jsx(\"td\",{className:\"cartTableTd\",children:\"\\uC218\\uB7C9\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[Product.length>0&&Product.map(function(item,index){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"cartProductInfo\",children:/*#__PURE__*/_jsx(\"img\",{src:\"http://localhost:5000/\".concat(item.image),alt:\"productImage\"})},item.index),/*#__PURE__*/_jsx(\"td\",{className:\"cartProductInfo\",id:\"cartProTitle\",children:item.title},item.title),/*#__PURE__*/_jsx(\"td\",{className:\"cartProductInfo\",id:\"cartProOption\",children:item.option},item.option),/*#__PURE__*/_jsx(\"td\",{className:\"cartProductInfo\",id:\"cartProPrice\",children:item.price},item.price),/*#__PURE__*/_jsx(\"td\",{className:\"cartProductInfo\",id:\"cartProQuantity\",children:item.quantity},item.quantity)]},index);}),/*#__PURE__*/_jsx(\"tr\",{children:Product==null&&/*#__PURE__*/_jsx(\"div\",{className:\"cartProductInfo\",children:\"\\uC0C1\\uD488\\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})})]})]})]})]});}export default withRouter(Cart);","map":{"version":3,"sources":["C:/webshop/shopping/src/views/cart.js"],"names":["React","useEffect","useState","useDispatch","withRouter","Navmenu","getCartItems","Cart","props","dispatch","Product","setProduct","console","log","cartItems","user","userData","cart","length","forEach","item","push","id","then","response","payload","map","index","image","title","option","price","quantity"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Navmenu from \"./navmenu.js\";\r\nimport {getCartItems} from '../_actions/user_action'\r\n\r\nfunction Cart(props) {\r\n    \r\n    const dispatch = useDispatch();\r\n    const [Product,setProduct] = useState([]);\r\n    console.log(Product);\r\n    useEffect(()=>{\r\n        let cartItems = [];\r\n        //유저 데이터 true이고, cart에 상품이 있을때\r\n        if(props.user.userData && props.user.userData.cart) {\r\n            if(props.user.userData.cart.length > 0){\r\n                props.user.userData.cart.forEach(item => {\r\n                    //userData.cart : id,quantity,option\r\n                    //상품이 들어있으면 상품들의 id값 배열로 넣어줌\r\n                    cartItems.push(item.id)\r\n                })\r\n                //상품 아이디, 유저정보 안의 카트 데이터 넣어서 실행\r\n                dispatch(getCartItems(cartItems, props.user.userData.cart))\r\n                .then((response)=> {\r\n                    setProduct(response.payload);\r\n                })\r\n            }\r\n        }\r\n       },[props.user.userData])\r\n    return (\r\n        <div className='cartWrapper'>\r\n            <Navmenu></Navmenu>\r\n            <div className='myCartContainer'>\r\n                <h2 id=\"myCart\">내 카트</h2>\r\n                <table className='cartTable'>\r\n                    <thead>\r\n                        <tr className='cartTableHead'>\r\n                            <td className='cartTableTd'>이미지</td>\r\n                            <td className='cartTableTd'>상품명</td>\r\n                            <td className='cartTableTd' id='tableTdOption'>옵션</td>\r\n                            <td className='cartTableTd'>가격</td>\r\n                            <td className='cartTableTd'>수량</td>\r\n                        </tr>\r\n                    </thead>\r\n                        <tbody>\r\n                            \r\n                                {   Product.length > 0 &&\r\n                                    Product.map((item,index)=>{\r\n                                        return(\r\n                                        <tr key={index}>\r\n                                        <td key={item.index} className='cartProductInfo'><img src={`http://localhost:5000/${item.image}`} alt=\"productImage\" /></td>\r\n                                        <td key={item.title} className='cartProductInfo' id='cartProTitle'>{item.title}</td>\r\n                                        <td key={item.option} className='cartProductInfo' id='cartProOption'>{item.option}</td>\r\n                                        <td key={item.price} className='cartProductInfo' id='cartProPrice'>{item.price}</td>\r\n                                        <td key={item.quantity} className='cartProductInfo' id='cartProQuantity'>{item.quantity}</td>\r\n                                        </tr>\r\n                                        )\r\n                                    })}\r\n                            \r\n                            <tr>\r\n                                {Product == null && <div className='cartProductInfo'>상품정보가 없습니다.</div> }\r\n                            </tr>\r\n                        </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(Cart);"]},"metadata":{},"sourceType":"module"}