{"ast":null,"code":"var _jsxFileName = \"C:\\\\webshop\\\\shopping\\\\src\\\\hoc\\\\auth.js\";\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { auth } from '../_actions/user_action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function (SpecificComponent, option) {\n  var _s = $RefreshSig$();\n\n  let adminRoute = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  //null => 아무나 출입이 가능한 페이지\n  //true => 로그인한 유저만 출입 가능한 페이지\n  //false => 로그인한 유저는 출입 불가능한 페이지\n  function AuthenticationCheck(props) {\n    _s();\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n      dispatch(auth()).then(response => {\n        console.log(response);\n\n        if (!response.payload.isAuth) {\n          //로그인 하지 않은 상태\n          if (option) {\n            props.history.push('/user/login');\n          }\n        } else {\n          //로그인 한 상태이고 어드민 권한이 없는 상태 (inAdmin이 false)\n          if (adminRoute && !response.payload.isAdmin) {\n            props.history.push('/');\n          }\n\n          if (option === false) {\n            //로그인 한 상태에서 접속할 수 없는 페이지에 접근\n            props.history.push('/');\n          }\n        }\n      });\n    }, []);\n    return /*#__PURE__*/_jsxDEV(SpecificComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s(AuthenticationCheck, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n    return [useDispatch];\n  });\n\n  return AuthenticationCheck;\n}","map":{"version":3,"sources":["C:/webshop/shopping/src/hoc/auth.js"],"names":["axios","React","useEffect","useDispatch","auth","SpecificComponent","option","adminRoute","AuthenticationCheck","props","dispatch","then","response","console","log","payload","isAuth","history","push","isAdmin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA2B,aAA3B;AACA,SAAQC,IAAR,QAAmB,yBAAnB;;AAEA,eAAe,UAAUC,iBAAV,EAA6BC,MAA7B,EAAwD;AAAA;;AAAA,MAAnBC,UAAmB,uEAAN,IAAM;;AAGnE;AACA;AACA;AACA,WAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAChC,UAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEAD,IAAAA,SAAS,CAAC,MAAK;AAEXQ,MAAAA,QAAQ,CAACN,IAAI,EAAL,CAAR,CAAiBO,IAAjB,CAAsBC,QAAQ,IAAI;AAC9BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAGA,YAAG,CAACA,QAAQ,CAACG,OAAT,CAAiBC,MAArB,EAA6B;AACzB;AACA,cAAGV,MAAH,EAAW;AACPG,YAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,aAAnB;AACH;AACJ,SALD,MAKO;AACH;AACA,cAAGX,UAAU,IAAI,CAACK,QAAQ,CAACG,OAAT,CAAiBI,OAAnC,EAA4C;AACxCV,YAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH;;AAAC,cAAGZ,MAAM,KAAK,KAAd,EAAqB;AACnB;AACAG,YAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AAEH;AACJ;AACJ,OAnBD;AAoBH,KAtBQ,EAsBP,EAtBO,CAAT;AAuBA,wBACI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH;;AApCkE,KAM1DV,mBAN0D;AAAA,YAO9CL,WAP8C;AAAA;;AAuCnE,SAAOK,mBAAP;AACH","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch} from 'react-redux';\r\nimport {auth} from '../_actions/user_action'\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n\r\n\r\n    //null => 아무나 출입이 가능한 페이지\r\n    //true => 로그인한 유저만 출입 가능한 페이지\r\n    //false => 로그인한 유저는 출입 불가능한 페이지\r\n    function AuthenticationCheck(props) {\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(()=> {\r\n\r\n            dispatch(auth()).then(response => {\r\n                console.log(response)\r\n\r\n                \r\n                if(!response.payload.isAuth) {\r\n                    //로그인 하지 않은 상태\r\n                    if(option) {\r\n                        props.history.push('/user/login')\r\n                    }\r\n                } else {\r\n                    //로그인 한 상태이고 어드민 권한이 없는 상태 (inAdmin이 false)\r\n                    if(adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    } if(option === false) {\r\n                        //로그인 한 상태에서 접속할 수 없는 페이지에 접근\r\n                        props.history.push('/')\r\n\r\n                    }\r\n                }\r\n            })\r\n        },[])\r\n        return(\r\n            <SpecificComponent/>\r\n        )\r\n    \r\n    }\r\n\r\n\r\n    return AuthenticationCheck\r\n}"]},"metadata":{},"sourceType":"module"}