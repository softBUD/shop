{"ast":null,"code":"var _jsxFileName = \"C:\\\\webshop\\\\shopping\\\\src\\\\views\\\\signUp.js\",\n    _s = $RefreshSig$();\n\nimport { faStepForward } from '@fortawesome/free-solid-svg-icons';\nimport React, { useContext, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signUpUser } from '../_actions/user_action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignUp(props) {\n  _s();\n\n  const dispath = useDispatch();\n  const [Email, EmailState] = useState(\"\");\n  const [Domain, DomainState] = useState(\"\");\n  const [Fullmail, FullmailState] = useState(\"\");\n  const options = [{\n    value: \"naver.com\",\n    name: \"naver\"\n  }, {\n    value: \"gmail.com\",\n    name: \"google\"\n  }, {\n    value: \"hanmail.net\",\n    name: \"daum\"\n  }];\n  const [Name, NameState] = useState(\"\");\n  const [NameMsg, NameMsgState] = useState(false);\n  const [PW, PWState] = useState(\"\");\n  const [PWCheck, PWCheckState] = useState(\"\");\n  const [PWMsg, PWMsgState] = useState(false);\n  const [PWChkMsg, PWChkMsgState] = useState(false);\n\n  const onEmailHandler = e => {\n    EmailState(e.currentTarget.value);\n  };\n\n  const onDomainHandler = e => {\n    DomainState(e.currentTarget.value);\n  };\n\n  const onNameHandler = e => {\n    NameState(e.currentTarget.value);\n  };\n\n  const onNameMsgHandler = e => {\n    NameMsgState(true);\n  };\n\n  const onPwHandler = e => {\n    PWState(e.currentTarget.value);\n  };\n\n  const onPwCheckHandler = e => {\n    PWCheckState(e.currentTarget.value);\n  };\n\n  const onPWMsgHandler = e => {\n    PWMsgState(true);\n  };\n\n  const onPWCheckMsgHandler = e => {\n    PWChkMsgState(true);\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n\n    if (Name == \"\") {\n      return alert(\"이름을 입력해주세요.\");\n    }\n\n    if (Domain == \"\") {\n      return alert(\"이메일을 확인해주세요.\");\n    }\n\n    if (PW !== PWCheck) {\n      return alert(\"비밀번호가 동일하지 않습니다.\");\n    }\n\n    let body = {\n      email: Email + \"@\" + Domain,\n      userName: Name,\n      password: PW\n    };\n    dispath(signUpUser(body)).then(response => {\n      if (response.payload.signupSuccess) {\n        props.history.push('/');\n      } else {\n        alert(\"Error\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      id: \"signUpForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"emailID\",\n        className: \"signUpLabel\",\n        children: \"\\uC774\\uBA54\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emailContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"signUpEmail\",\n          value: Email,\n          onChange: onEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emailSpan\",\n          children: \"@\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"emailDomain\",\n          onChange: onDomainHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"none\",\n            hidden: true,\n            children: \"\\uC120\\uD0DD\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.value\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        className: \"signUpLabel\",\n        children: \"\\uC774\\uB984\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: Name,\n        onClick: onNameMsgHandler,\n        onChange: onNameHandler,\n        className: \"signUpInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), NameMsg == true && Name.length < 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uC774\\uB984\\uC740 \\uB450\\uAE00\\uC790 \\uC774\\uC0C1 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 50\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"PW\",\n        className: \"signUpLabel\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: PW,\n        onClick: onPWMsgHandler,\n        onChange: onPwHandler,\n        className: \"signUpInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), PWMsg == true && PWCheck.length < 6 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uC601\\uBB38\\uC790\\uC640 \\uC22B\\uC790 \\uC870\\uD569\\uD544\\uC218\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 52\n      }, this) : null, PWMsg.length < 6 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"6\\uAE00\\uC790 \\uC774\\uC0C1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"PWchk\",\n        className: \"signUpLabel\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: PWCheck,\n        onClick: onPWCheckMsgHandler,\n        onChange: onPwCheckHandler,\n        className: \"signUpInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), PWChkMsg == true && PW !== PWCheck ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uB3D9\\uC77C\\uD55C \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 51\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"\\uD68C\\uC6D0\\uAC00\\uC785\",\n        id: \"signUpBtn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUp, \"DtRN9aM+jQttRIpLsNMlmgk1nrU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/webshop/shopping/src/views/signUp.js"],"names":["faStepForward","React","useContext","useState","useDispatch","signUpUser","SignUp","props","dispath","Email","EmailState","Domain","DomainState","Fullmail","FullmailState","options","value","name","Name","NameState","NameMsg","NameMsgState","PW","PWState","PWCheck","PWCheckState","PWMsg","PWMsgState","PWChkMsg","PWChkMsgState","onEmailHandler","e","currentTarget","onDomainHandler","onNameHandler","onNameMsgHandler","onPwHandler","onPwCheckHandler","onPWMsgHandler","onPWCheckMsgHandler","onSubmitHandler","preventDefault","alert","body","email","userName","password","then","response","payload","signupSuccess","history","push","map","option","length"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,mCAA9B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,UAAR,QAAyB,yBAAzB;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAEnB,QAAMC,OAAO,GAAGJ,WAAW,EAA3B;AAEA,QAAM,CAACK,KAAD,EAAOC,UAAP,IAAqBP,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACQ,MAAD,EAAQC,WAAR,IAAuBT,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACU,QAAD,EAAUC,aAAV,IAA2BX,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAMY,OAAO,GAAG,CACA;AAACC,IAAAA,KAAK,EAAC,WAAP;AAAoBC,IAAAA,IAAI,EAAC;AAAzB,GADA,EAEA;AAACD,IAAAA,KAAK,EAAC,WAAP;AAAoBC,IAAAA,IAAI,EAAC;AAAzB,GAFA,EAGA;AAACD,IAAAA,KAAK,EAAC,aAAP;AAAsBC,IAAAA,IAAI,EAAC;AAA3B,GAHA,CAAhB;AAKA,QAAM,CAACC,IAAD,EAAOC,SAAP,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,OAAD,EAASC,YAAT,IAAyBlB,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAM,CAACmB,EAAD,EAAKC,OAAL,IAAgBpB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACqB,OAAD,EAAUC,YAAV,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACuB,KAAD,EAAQC,UAAR,IAAsBxB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACyB,QAAD,EAAWC,aAAX,IAA4B1B,QAAQ,CAAC,KAAD,CAA1C;;AAGA,QAAM2B,cAAc,GAAIC,CAAD,IAAO;AAC1BrB,IAAAA,UAAU,CAACqB,CAAC,CAACC,aAAF,CAAgBhB,KAAjB,CAAV;AAEH,GAHD;;AAIA,QAAMiB,eAAe,GAAIF,CAAD,IAAO;AAC3BnB,IAAAA,WAAW,CAACmB,CAAC,CAACC,aAAF,CAAgBhB,KAAjB,CAAX;AACH,GAFD;;AAIA,QAAMkB,aAAa,GAAIH,CAAD,IAAO;AACzBZ,IAAAA,SAAS,CAACY,CAAC,CAACC,aAAF,CAAgBhB,KAAjB,CAAT;AACH,GAFD;;AAGA,QAAMmB,gBAAgB,GAAIJ,CAAD,IAAO;AAC7BV,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACF,GAFD;;AAGA,QAAMe,WAAW,GAAIL,CAAD,IAAO;AACvBR,IAAAA,OAAO,CAACQ,CAAC,CAACC,aAAF,CAAgBhB,KAAjB,CAAP;AACH,GAFD;;AAGA,QAAMqB,gBAAgB,GAAIN,CAAD,IAAO;AAC5BN,IAAAA,YAAY,CAACM,CAAC,CAACC,aAAF,CAAgBhB,KAAjB,CAAZ;AACH,GAFD;;AAGA,QAAMsB,cAAc,GAAIP,CAAD,IAAO;AAC1BJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAFD;;AAGA,QAAMY,mBAAmB,GAAIR,CAAD,IAAO;AAC/BF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAIA,QAAMW,eAAe,GAAIT,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACU,cAAF;;AACA,QAAGvB,IAAI,IAAI,EAAX,EAAe;AACX,aAAOwB,KAAK,CAAC,aAAD,CAAZ;AACH;;AACD,QAAG/B,MAAM,IAAI,EAAb,EAAiB;AACb,aAAO+B,KAAK,CAAC,cAAD,CAAZ;AACH;;AACD,QAAGpB,EAAE,KAAKE,OAAV,EAAmB;AACf,aAAOkB,KAAK,CAAC,kBAAD,CAAZ;AACH;;AACD,QAAIC,IAAI,GAAG;AACPC,MAAAA,KAAK,EAAEnC,KAAK,GAAC,GAAN,GAAUE,MADV;AAEPkC,MAAAA,QAAQ,EAAE3B,IAFH;AAGP4B,MAAAA,QAAQ,EAAExB;AAHH,KAAX;AAKAd,IAAAA,OAAO,CAACH,UAAU,CAACsC,IAAD,CAAX,CAAP,CACCI,IADD,CACMC,QAAQ,IAAG;AACb,UAAGA,QAAQ,CAACC,OAAT,CAAiBC,aAApB,EAAmC;AAC/B3C,QAAAA,KAAK,CAAC4C,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH,OAFD,MAEO;AACHV,QAAAA,KAAK,CAAC,OAAD,CAAL;AACH;AACJ,KAPD;AAQH,GAxBD;;AA4BA,sBACI;AAAA,2BACA;AAAM,MAAA,QAAQ,EAAEF,eAAhB;AAAiC,MAAA,EAAE,EAAC,YAApC;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,SAAf;AAAyB,QAAA,SAAS,EAAC,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC,aAA7B;AAA0C,UAAA,KAAK,EAAE/B,KAAjD;AAAwD,UAAA,QAAQ,EAAEqB;AAAlE;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,QAAQ,EAAEG,eAA1C;AAAA,kCACI;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAqB,YAAA,MAAM,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKlB,OAAO,CAACsC,GAAR,CAAaC,MAAD,iBACT;AAEA,YAAA,KAAK,EAAEA,MAAM,CAACtC,KAFd;AAAA,sBAGEsC,MAAM,CAACtC;AAHT,aACKsC,MAAM,CAACtC,KADZ;AAAA;AAAA;AAAA;AAAA,kBADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAeI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAsB,QAAA,SAAS,EAAC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eAgBI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAoB,QAAA,KAAK,EAAEE,IAA3B;AAAiC,QAAA,OAAO,EAAEiB,gBAA1C;AAA4D,QAAA,QAAQ,EAAED,aAAtE;AAAqF,QAAA,SAAS,EAAC;AAA/F;AAAA;AAAA;AAAA;AAAA,cAhBJ,EAiBKd,OAAO,IAAI,IAAX,IAAmBF,IAAI,CAACqC,MAAL,GAAa,CAAhC,gBAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAApC,GAAmE,IAjBxE,eAkBI;AAAO,QAAA,OAAO,EAAC,IAAf;AAAoB,QAAA,SAAS,EAAC,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAmBI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,EAAEjC,EAA9B;AAAkC,QAAA,OAAO,EAAEgB,cAA3C;AAA2D,QAAA,QAAQ,EAAEF,WAArE;AAAkF,QAAA,SAAS,EAAC;AAA5F;AAAA;AAAA;AAAA;AAAA,cAnBJ,EAoBKV,KAAK,IAAI,IAAT,IAAiBF,OAAO,CAAC+B,MAAR,GAAiB,CAAlC,gBAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtC,GAA8D,IApBnE,EAqBK7B,KAAK,CAAC6B,MAAN,GAAe,CAAf,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAnB,GAAqC,IArB1C,eAsBI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAuB,QAAA,SAAS,EAAC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ,eAuBI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,EAAE/B,OAA9B;AAAuC,QAAA,OAAO,EAAEe,mBAAhD;AAAqE,QAAA,QAAQ,EAAEF,gBAA/E;AAAiG,QAAA,SAAS,EAAC;AAA3G;AAAA;AAAA;AAAA;AAAA,cAvBJ,EAwBKT,QAAQ,IAAI,IAAZ,IAAoBN,EAAE,KAAKE,OAA3B,gBAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAArC,GAAiE,IAxBtE,eAyBI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,0BAA3B;AAAkC,QAAA,EAAE,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,cAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GA1GQlB,M;UAEWF,W;;;KAFXE,M;AA4GT,eAAeA,MAAf","sourcesContent":["import { faStepForward } from '@fortawesome/free-solid-svg-icons';\r\nimport React, { useContext, useState } from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {signUpUser} from '../_actions/user_action'\r\n\r\nfunction SignUp(props) {\r\n\r\n    const dispath = useDispatch();\r\n\r\n    const [Email,EmailState] = useState(\"\");\r\n    const [Domain,DomainState] = useState(\"\");\r\n    const [Fullmail,FullmailState] = useState(\"\");\r\n    const options = [ \r\n                    {value:\"naver.com\", name:\"naver\"},\r\n                    {value:\"gmail.com\", name:\"google\"},\r\n                    {value:\"hanmail.net\" ,name:\"daum\"}\r\n                    ];\r\n    const [Name, NameState] = useState(\"\");\r\n    const [NameMsg,NameMsgState] = useState(false)\r\n    const [PW, PWState] = useState(\"\");\r\n    const [PWCheck, PWCheckState] = useState(\"\");\r\n    const [PWMsg, PWMsgState] = useState(false);\r\n    const [PWChkMsg, PWChkMsgState] = useState(false);\r\n\r\n\r\n    const onEmailHandler = (e) => {\r\n        EmailState(e.currentTarget.value)\r\n    \r\n    }\r\n    const onDomainHandler = (e) => {\r\n        DomainState(e.currentTarget.value)\r\n    }\r\n\r\n    const onNameHandler = (e) => {\r\n        NameState(e.currentTarget.value)\r\n    }\r\n    const onNameMsgHandler = (e) => {\r\n       NameMsgState(true)\r\n    }\r\n    const onPwHandler = (e) => {\r\n        PWState(e.currentTarget.value)\r\n    }\r\n    const onPwCheckHandler = (e) => {\r\n        PWCheckState(e.currentTarget.value)\r\n    }\r\n    const onPWMsgHandler = (e) => {\r\n        PWMsgState(true)\r\n    }\r\n    const onPWCheckMsgHandler = (e) => {\r\n        PWChkMsgState(true)\r\n    }\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        if(Name == \"\") {\r\n            return alert(\"이름을 입력해주세요.\")\r\n        }\r\n        if(Domain == \"\") {\r\n            return alert(\"이메일을 확인해주세요.\")\r\n        }\r\n        if(PW !== PWCheck) {\r\n            return alert(\"비밀번호가 동일하지 않습니다.\")\r\n        }\r\n        let body = {\r\n            email: Email+\"@\"+Domain,\r\n            userName: Name,\r\n            password: PW\r\n        }\r\n        dispath(signUpUser(body))\r\n        .then(response=> {\r\n            if(response.payload.signupSuccess) {\r\n                props.history.push('/')\r\n            } else {\r\n                alert(\"Error\")\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <form onSubmit={onSubmitHandler} id='signUpForm'>\r\n            <label htmlFor=\"emailID\" className='signUpLabel'>이메일</label>\r\n            <div className='emailContainer'>\r\n            <input type=\"text\" className='signUpEmail'value={Email} onChange={onEmailHandler}/>\r\n            <div className='emailSpan'>@</div>\r\n            <select className='emailDomain' onChange={onDomainHandler}>\r\n                <option value=\"none\" hidden>선택하기</option>\r\n                {options.map((option) => (\r\n                    <option \r\n                    key={option.value}\r\n                    value={option.value}\r\n                    >{option.value}</option>\r\n                ))}\r\n            </select>\r\n            </div>\r\n            <label htmlFor=\"name\" className='signUpLabel'>이름</label>\r\n            <input type=\"text\"  value={Name} onClick={onNameMsgHandler} onChange={onNameHandler} className=\"signUpInput\"/>\r\n            {NameMsg == true && Name.length <2 ? <div>이름은 두글자 이상 입력해주세요</div> : null}\r\n            <label htmlFor=\"PW\" className='signUpLabel'>비밀번호</label>\r\n            <input type=\"password\" value={PW} onClick={onPWMsgHandler} onChange={onPwHandler} className=\"signUpInput\"/>\r\n            {PWMsg == true && PWCheck.length < 6 ? <div>영문자와 숫자 조합필수</div>:null}\r\n            {PWMsg.length < 6 ? <div>6글자 이상</div>:null}\r\n            <label htmlFor=\"PWchk\" className='signUpLabel'>비밀번호 확인</label>\r\n            <input type=\"password\" value={PWCheck} onClick={onPWCheckMsgHandler} onChange={onPwCheckHandler} className=\"signUpInput\"/>\r\n            {PWChkMsg == true && PW !== PWCheck ? <div>동일한 비밀번호를 입력해주세요</div>:null}\r\n            <input type=\"submit\" value=\"회원가입\" id='signUpBtn'/>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}