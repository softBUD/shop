{"ast":null,"code":"var _jsxFileName = \"C:\\\\webshop\\\\shopping\\\\src\\\\views\\\\signUp.js\",\n    _s = $RefreshSig$();\n\nimport { faStepForward } from '@fortawesome/free-solid-svg-icons';\nimport React, { useContext, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from '../_actions/user_action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignUp(props) {\n  _s();\n\n  const dispath = useDispatch();\n  const [email, emailState] = useState(\"\");\n  const [id, idState] = useState(\"\");\n  const [pw, pwState] = useState(\"\");\n  const [pwCheck, pwCheckState] = useState(\"\");\n\n  const onEmailHandler = e => {\n    emailState(e.currentTarget.value);\n  };\n\n  const onIdHandler = e => {\n    idState(e.currentTarget.value);\n  };\n\n  const onPwHandler = e => {\n    pwState(e.currentTarget.value);\n  };\n\n  const onPwCheckHandler = e => {\n    pwCheckState(e.currentTarget.value);\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    let body = {\n      email: email,\n      password: pw\n    };\n    dispath(loginUser(body)).then(response => {\n      if (response.payload.loginSuccess) {\n        props.history.push('/');\n      } else {\n        alert(\"Error\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"/add\",\n    method: \"POST\",\n    id: \"signUpForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: onEmailHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"ID\",\n      children: \"ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: id,\n      onChange: onIdHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"PW\",\n      children: \"PW\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: pw,\n      onChange: onPwHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"PWchk\",\n      children: \"PW check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: pwCheck,\n      onChange: onPwCheckHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"submit\",\n      id: \"signUpBtn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUp, \"+edSGVYhNg1THa9LuvMHUkZd9bo=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SignUp;\nexport default signUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/webshop/shopping/src/views/signUp.js"],"names":["faStepForward","React","useContext","useState","useDispatch","loginUser","SignUp","props","dispath","email","emailState","id","idState","pw","pwState","pwCheck","pwCheckState","onEmailHandler","e","currentTarget","value","onIdHandler","onPwHandler","onPwCheckHandler","onSubmitHandler","preventDefault","body","password","then","response","payload","loginSuccess","history","push","alert","signUp"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,mCAA9B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,SAAR,QAAwB,yBAAxB;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAEnB,QAAMC,OAAO,GAAGJ,WAAW,EAA3B;AAEA,QAAM,CAACK,KAAD,EAAOC,UAAP,IAAqBP,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACQ,EAAD,EAAKC,OAAL,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACU,EAAD,EAAKC,OAAL,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACY,OAAD,EAAUC,YAAV,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;;AAGA,QAAMc,cAAc,GAAIC,CAAD,IAAO;AAC1BR,IAAAA,UAAU,CAACQ,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAV;AACH,GAFD;;AAGA,QAAMC,WAAW,GAAIH,CAAD,IAAO;AACvBN,IAAAA,OAAO,CAACM,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAP;AACH,GAFD;;AAGA,QAAME,WAAW,GAAIJ,CAAD,IAAO;AACvBJ,IAAAA,OAAO,CAACI,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAP;AACH,GAFD;;AAGA,QAAMG,gBAAgB,GAAIL,CAAD,IAAO;AAC5BF,IAAAA,YAAY,CAACE,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAZ;AACH,GAFD;;AAIA,QAAMI,eAAe,GAAIN,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACO,cAAF;AAEA,QAAIC,IAAI,GAAG;AACPjB,MAAAA,KAAK,EAAEA,KADA;AAEPkB,MAAAA,QAAQ,EAAEd;AAFH,KAAX;AAIAL,IAAAA,OAAO,CAACH,SAAS,CAACqB,IAAD,CAAV,CAAP,CACCE,IADD,CACMC,QAAQ,IAAG;AACb,UAAGA,QAAQ,CAACC,OAAT,CAAiBC,YAApB,EAAkC;AAC9BxB,QAAAA,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH,OAFD,MAEO;AACHC,QAAAA,KAAK,CAAC,OAAD,CAAL;AACH;AACJ,KAPD;AAQH,GAfD;;AAmBA,sBACI;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,MAAM,EAAC,MAA3B;AAAkC,IAAA,EAAE,EAAC,YAArC;AAAA,4BACI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,KAAK,EAAEzB,KAA3B;AAAkC,MAAA,QAAQ,EAAEQ;AAA5C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAO,MAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAoB,MAAA,KAAK,EAAEN,EAA3B;AAA+B,MAAA,QAAQ,EAAEU;AAAzC;AAAA;AAAA;AAAA;AAAA,YALJ,eAOI;AAAO,MAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAER,EAA1B;AAA8B,MAAA,QAAQ,EAAES;AAAxC;AAAA;AAAA;AAAA;AAAA,YARJ,eAUI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEP,OAA1B;AAAmC,MAAA,QAAQ,EAAEQ;AAA7C;AAAA;AAAA;AAAA;AAAA,YAXJ,eAaI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,EAAE,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA3DQjB,M;UAEWF,W;;;KAFXE,M;AA6DT,eAAe6B,MAAf","sourcesContent":["import { faStepForward } from '@fortawesome/free-solid-svg-icons';\r\nimport React, { useContext, useState } from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {loginUser} from '../_actions/user_action'\r\n\r\nfunction SignUp(props) {\r\n\r\n    const dispath = useDispatch();\r\n\r\n    const [email,emailState] = useState(\"\");\r\n    const [id, idState] = useState(\"\");\r\n    const [pw, pwState] = useState(\"\");\r\n    const [pwCheck, pwCheckState] = useState(\"\");\r\n\r\n\r\n    const onEmailHandler = (e) => {\r\n        emailState(e.currentTarget.value)\r\n    }\r\n    const onIdHandler = (e) => {\r\n        idState(e.currentTarget.value)\r\n    }\r\n    const onPwHandler = (e) => {\r\n        pwState(e.currentTarget.value)\r\n    }\r\n    const onPwCheckHandler = (e) => {\r\n        pwCheckState(e.currentTarget.value)\r\n    }\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        let body = {\r\n            email: email,\r\n            password: pw\r\n        }\r\n        dispath(loginUser(body))\r\n        .then(response=> {\r\n            if(response.payload.loginSuccess) {\r\n                props.history.push('/')\r\n            } else {\r\n                alert(\"Error\")\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <form action=\"/add\" method=\"POST\" id='signUpForm'>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" value={email} onChange={onEmailHandler}/>\r\n            \r\n            <label htmlFor=\"ID\">ID</label>\r\n            <input type=\"text\"  value={id} onChange={onIdHandler}/>\r\n\r\n            <label htmlFor=\"PW\">PW</label>\r\n            <input type=\"text\" value={pw} onChange={onPwHandler}/>\r\n\r\n            <label htmlFor=\"PWchk\">PW check</label>\r\n            <input type=\"text\" value={pwCheck} onChange={onPwCheckHandler} />\r\n\r\n            <input type=\"submit\" value=\"submit\" id='signUpBtn'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default signUp;"]},"metadata":{},"sourceType":"module"}